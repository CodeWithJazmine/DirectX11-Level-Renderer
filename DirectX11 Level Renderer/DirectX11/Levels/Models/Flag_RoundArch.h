// "Flag_RoundArch.h" generated by "Obj2Header.exe" [Version 1.9d] Author: L.Norri Fullsail University.
// Data is converted to left-handed coordinate system and UV data is V flipped for Direct3D/Vulkan.
// The companion file "Flag_RoundArch.h2b" is a binary dump of this format(-padding) for more flexibility.
// Loading *.h2b: read version, sizes, handle strings(max len 260) by reading until null-terminated.
/***********************/
/*  Generator version  */
/***********************/
#ifndef _Flag_RoundArch_version_
const char Flag_RoundArch_version[4] = { '0','1','9','d' };
#define _Flag_RoundArch_version_
#endif
/************************************************/
/*  This section contains the model's size data */
/************************************************/
#ifndef _Flag_RoundArch_vertexcount_
const unsigned Flag_RoundArch_vertexcount = 149;
#define _Flag_RoundArch_vertexcount_
#endif
#ifndef _Flag_RoundArch_indexcount_
const unsigned Flag_RoundArch_indexcount = 396;
#define _Flag_RoundArch_indexcount_
#endif
#ifndef _Flag_RoundArch_materialcount_
const unsigned Flag_RoundArch_materialcount = 1; // can be used for batched draws
#define _Flag_RoundArch_materialcount_
#endif
#ifndef _Flag_RoundArch_meshcount_
const unsigned Flag_RoundArch_meshcount = 1;
#define _Flag_RoundArch_meshcount_
#endif
/************************************************/
/*  This section contains the raw data to load  */
/************************************************/
#ifndef __OBJ_VEC3__
typedef struct _OBJ_VEC3_
{
	float x,y,z; // 3D Coordinate.
}OBJ_VEC3;
#define __OBJ_VEC3__
#endif
#ifndef __OBJ_VERT__
typedef struct _OBJ_VERT_
{
	OBJ_VEC3 pos; // Left-handed +Z forward coordinate w not provided, assumed to be 1.
	OBJ_VEC3 uvw; // D3D/Vulkan style top left 0,0 coordinate.
	OBJ_VEC3 nrm; // Provided direct from obj file, may or may not be normalized.
}OBJ_VERT;
#define __OBJ_VERT__
#endif
#ifndef _Flag_RoundArch_vertices_
// Raw Vertex Data follows: Positions, Texture Coordinates and Normals.
const OBJ_VERT Flag_RoundArch_vertices[149] =
{
	{	{ -0.895558f, 3.233761f, 0.183461f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.597400f, 0.801900f, 0.001500f }	},
	{	{ -0.896172f, 3.233761f, -0.056483f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.595000f, 0.803700f, 0.001500f }	},
	{	{ -1.084053f, 3.088839f, -0.006105f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.610500f, 0.792000f, 0.001500f }	},
	{	{ -0.748866f, 3.323076f, -0.064945f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.498700f, 0.866800f, 0.001200f }	},
	{	{ -0.865168f, 3.256218f, -0.089084f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.532700f, 0.846300f, 0.001300f }	},
	{	{ -0.864464f, 3.256218f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.538800f, 0.842400f, 0.001400f }	},
	{	{ -0.597975f, 2.697261f, 0.183461f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.036500f, 0.038200f, 0.998600f }	},
	{	{ -0.747733f, 2.580036f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.036100f, 0.042400f, 0.998400f }	},
	{	{ -0.521092f, 2.435064f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.031900f, 0.055300f, 0.998000f }	},
	{	{ -0.342326f, 2.645878f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.026600f, -0.039600f, 0.998900f }	},
	{	{ -0.537661f, 2.792719f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.034000f, -0.036500f, 0.998800f }	},
	{	{ -0.597975f, 2.697261f, 0.183461f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.062400f, -0.069200f, 0.995700f }	},
	{	{ 0.220015f, 2.563355f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ 0.208500f, 2.695072f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ 0.080625f, 2.680856f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -0.082023f, 2.710226f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -0.205564f, 2.739823f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -0.226728f, 2.578460f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.017700f, -0.069300f, 0.997400f }	},
	{	{ 0.220015f, 2.563355f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.074800f, -0.225700f, 0.971300f }	},
	{	{ 0.082023f, 2.551819f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.009900f, -0.232100f, 0.972600f }	},
	{	{ 0.082033f, 2.508288f, 0.183461f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.009700f, -0.232900f, 0.972400f }	},
	{	{ -0.330489f, 2.792107f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -0.464999f, 2.866661f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -0.381313f, 2.948852f, 0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -0.444421f, 2.885935f, 0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -0.315712f, 2.802353f, 0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -0.570445f, 2.976655f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -0.748222f, 3.323076f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -0.864464f, 3.256218f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -0.263250f, 2.887355f, 0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -0.200679f, 2.769362f, 0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -0.384814f, 2.539146f, 0.183461f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.048000f, -0.086900f, 0.995100f }	},
	{	{ -0.235605f, 2.505571f, 0.183461f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.025300f, -0.146900f, 0.988800f }	},
	{	{ -0.384814f, 2.539146f, 0.183461f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.025900f, 0.060200f, 0.997900f }	},
	{	{ -0.388111f, 2.382234f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.016200f, 0.070000f, 0.997400f }	},
	{	{ -0.645897f, 2.898285f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.052300f, -0.035400f, 0.998000f }	},
	{	{ -0.864464f, 3.256218f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.223800f, -0.136600f, 0.965000f }	},
	{	{ -0.895558f, 3.233761f, 0.183461f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.211900f, -0.127700f, 0.968900f }	},
	{	{ 1.084500f, 3.088839f, -0.102243f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.610500f, 0.792000f, 0.001900f }	},
	{	{ 0.896502f, 3.233761f, -0.112634f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.598900f, 0.800800f, 0.002800f }	},
	{	{ 0.910256f, 3.222431f, 0.184274f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.601900f, 0.798500f, 0.002000f }	},
	{	{ 0.749167f, 3.323076f, -0.102243f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.498600f, 0.866800f, 0.001600f }	},
	{	{ 0.735142f, 3.330600f, 0.198502f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.498800f, 0.866700f, 0.001600f }	},
	{	{ 0.864464f, 3.256218f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.543900f, 0.839100f, 0.001700f }	},
	{	{ 0.614350f, 2.770874f, 0.183461f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.031500f, 0.036500f, 0.998800f }	},
	{	{ 0.369865f, 2.603428f, 0.183461f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.024700f, 0.039400f, 0.998900f }	},
	{	{ 0.447924f, 2.516523f, 0.188824f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.023900f, 0.041300f, 0.998900f }	},
	{	{ 0.614350f, 2.770874f, 0.183461f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.156200f, -0.189300f, 0.969400f }	},
	{	{ 0.590405f, 2.801593f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.169800f, -0.194400f, 0.966100f }	},
	{	{ 0.350562f, 2.640336f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.131000f, -0.205300f, 0.969900f }	},
	{	{ -0.235605f, 2.505571f, 0.183461f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.003900f, 0.078000f, 0.996900f }	},
	{	{ -0.118196f, 2.380131f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000500f, 0.082100f, 0.996600f }	},
	{	{ -0.082023f, 2.551818f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.002100f, -0.218700f, 0.975800f }	},
	{	{ 0.466010f, 2.930132f, 0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ 0.405963f, 2.963967f, 0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ 0.320805f, 2.911750f, 0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ 0.864464f, 3.256218f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.018000f, -0.019000f, 0.999700f }	},
	{	{ 0.735142f, 3.330600f, 0.198502f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.022400f, -0.023600f, 0.999500f }	},
	{	{ 0.553554f, 2.961207f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.002400f, -0.002500f, 1.000000f }	},
	{	{ 0.590405f, 2.801593f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ 0.495917f, 2.884318f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ 0.338391f, 2.732271f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ 0.865409f, 3.256218f, -0.102243f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.547100f, 0.837000f, 0.002700f }	},
	{	{ 0.334290f, 2.808259f, 0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ 0.185753f, 2.859599f, 0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ 0.369865f, 2.603428f, 0.183461f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.130100f, -0.205500f, 0.970000f }	},
	{	{ 0.910256f, 3.222431f, 0.184274f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.147200f, -0.080600f, 0.985800f }	},
	{	{ 0.864464f, 3.256218f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.146900f, -0.080300f, 0.985900f }	},
	{	{ 0.654713f, 2.872642f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.141200f, -0.121100f, 0.982500f }	},
	{	{ -0.073632f, 2.738147f, 0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ 0.082023f, 2.725560f, 0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ 0.082023f, 2.839832f, 0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -0.082033f, 2.508288f, 0.183461f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.002100f, -0.232200f, 0.972700f }	},
	{	{ -0.072297f, 2.389982f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.017700f, 0.064500f, 0.997800f }	},
	{	{ 0.131038f, 2.250355f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.002300f, 0.044800f, 0.999000f }	},
	{	{ 0.082033f, 2.508288f, 0.183461f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.009100f, 0.051600f, 0.998600f }	},
	{	{ 0.230571f, 2.522354f, 0.183461f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.017500f, 0.043800f, 0.998900f }	},
	{	{ -0.082023f, 2.551818f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ 0.082023f, 2.551819f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ 0.350562f, 2.640336f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ 0.735142f, 3.330600f, 0.198502f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.253200f, -0.143100f, 0.956800f }	},
	{	{ 0.721343f, 3.338536f, 0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.256300f, -0.145100f, 0.955600f }	},
	{	{ 0.529087f, 2.998859f, 0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.187500f, -0.126300f, 0.974100f }	},
	{	{ 0.737915f, 3.329548f, -0.102243f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.498600f, 0.866800f, 0.001600f }	},
	{	{ 0.721343f, 3.338536f, 0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.498700f, 0.866800f, 0.001600f }	},
	{	{ -0.547091f, 2.998836f, 0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.242200f, -0.163300f, 0.956400f }	},
	{	{ -0.736970f, 3.329548f, 0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.514200f, -0.295200f, 0.805300f }	},
	{	{ -0.748222f, 3.323076f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.502400f, -0.287600f, 0.815400f }	},
	{	{ -0.073632f, 2.738147f, 0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.060300f, -0.297200f, 0.952900f }	},
	{	{ -0.200679f, 2.769362f, 0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.078900f, -0.295000f, 0.952200f }	},
	{	{ -0.205564f, 2.739823f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.083900f, -0.305600f, 0.948500f }	},
	{	{ 0.208500f, 2.695072f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.039100f, -0.180000f, 0.982900f }	},
	{	{ 0.206139f, 2.747923f, 0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.043600f, -0.167100f, 0.985000f }	},
	{	{ 0.082023f, 2.725560f, 0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.005200f, -0.205100f, 0.978700f }	},
	{	{ -0.736970f, 3.329548f, 0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.498900f, 0.866700f, 0.001200f }	},
	{	{ -0.737695f, 3.329548f, -0.095252f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.498700f, 0.866800f, 0.001200f }	},
	{	{ -0.653403f, 3.377778f, 0.084823f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.498600f, 0.866800f, 0.001200f }	},
	{	{ -0.444421f, 2.885935f, 0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.170700f, -0.302800f, 0.937700f }	},
	{	{ -0.464999f, 2.866661f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.162700f, -0.293500f, 0.942000f }	},
	{	{ -0.330489f, 2.792107f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.241900f, -0.437000f, 0.866400f }	},
	{	{ 0.206139f, 2.747923f, 0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -0.082023f, 2.839832f, 0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -0.185753f, 2.859599f, 0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -0.485064f, 3.060674f, 0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -0.653115f, 3.377778f, 0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -0.736970f, 3.329548f, 0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ 0.654060f, 3.377778f, -0.102243f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.498600f, 0.866800f, 0.001500f }	},
	{	{ 0.653115f, 3.377778f, 0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.498600f, 0.866800f, 0.001500f }	},
	{	{ 0.495917f, 2.884318f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.129400f, -0.119400f, 0.984400f }	},
	{	{ 0.466010f, 2.930132f, 0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.136000f, -0.123200f, 0.983000f }	},
	{	{ 0.334290f, 2.808259f, 0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.094800f, -0.120100f, 0.988200f }	},
	{	{ 0.721343f, 3.338536f, 0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ 0.653115f, 3.377778f, 0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ 0.469961f, 3.032175f, 0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -0.082023f, 2.710226f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.064600f, -0.305700f, 0.949900f }	},
	{	{ 0.080625f, 2.680856f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000700f, -0.215700f, 0.976400f }	},
	{	{ 0.338391f, 2.732271f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.074600f, -0.128600f, 0.988900f }	},
	{	{ -0.315712f, 2.802353f, 0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.221300f, -0.452100f, 0.864100f }	},
	{	{ -0.547091f, 2.998836f, 0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -0.700987f, 2.841589f, 0.185073f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.088600f, -0.063100f, 0.994100f }	},
	{	{ -0.852650f, 2.690489f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.038500f, 0.025100f, 0.998900f }	},
	{	{ -0.570445f, 2.976655f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.235800f, -0.168000f, 0.957200f }	},
	{	{ -0.464999f, 2.866661f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.231800f, -0.222200f, 0.947100f }	},
	{	{ -0.444421f, 2.885935f, 0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.228900f, -0.218000f, 0.948700f }	},
	{	{ -0.700987f, 2.841589f, 0.185073f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.038400f, 0.019900f, 0.999100f }	},
	{	{ -0.895558f, 3.233761f, 0.183461f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.037600f, 0.022800f, 0.999000f }	},
	{	{ -1.083555f, 3.088839f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.037400f, 0.022400f, 0.999100f }	},
	{	{ 0.529087f, 2.998859f, 0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ 0.707845f, 2.845913f, 0.183461f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.137200f, -0.110000f, 0.984400f }	},
	{	{ 0.771689f, 2.595359f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.032200f, 0.030500f, 0.999000f }	},
	{	{ 0.848878f, 2.735892f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.039800f, 0.029600f, 0.998800f }	},
	{	{ 0.654713f, 2.872642f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ 0.553554f, 2.961207f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.172500f, -0.126800f, 0.976800f }	},
	{	{ 0.910256f, 3.222431f, 0.184274f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.042000f, 0.037600f, 0.998400f }	},
	{	{ 0.707845f, 2.845913f, 0.183461f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.088800f, 0.045600f, 0.995000f }	},
	{	{ 0.855900f, 2.907496f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.073400f, 0.043000f, 0.996400f }	},
	{	{ 0.521092f, 2.435064f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.025000f, 0.039200f, 0.998900f }	},
	{	{ 0.388111f, 2.382234f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.022400f, 0.046900f, 0.998600f }	},
	{	{ -1.083555f, 3.088839f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.610500f, 0.792000f, 0.001500f }	},
	{	{ -0.748222f, 3.323076f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.499000f, 0.866600f, 0.001200f }	},
	{	{ 0.230571f, 2.522354f, 0.183461f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.071500f, -0.227700f, 0.971100f }	},
	{	{ -0.283932f, 2.900395f, 0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ 1.083555f, 3.088839f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.610500f, 0.792000f, 0.002000f }	},
	{	{ -0.082033f, 2.508288f, 0.183461f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.001400f, 0.081200f, 0.996700f }	},
	{	{ -0.082033f, 2.508288f, 0.183461f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, 0.087500f, 0.996200f }	},
	{	{ -0.653115f, 3.377778f, 0.203408f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.498600f, 0.866800f, 0.001200f }	},
	{	{ 0.707845f, 2.845913f, 0.183461f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.037300f, 0.046500f, 0.998200f }	},
	{	{ 1.083555f, 3.088839f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.028100f, 0.035200f, 0.999000f }	},
	{	{ 0.472361f, 2.415704f, 0.193851f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.018000f, 0.045400f, 0.998800f }	},
};
#define _Flag_RoundArch_vertices_
#endif
#ifndef _Flag_RoundArch_indices_
// Index Data follows: Sequential by mesh, Every Three Indices == One Triangle.
const unsigned int Flag_RoundArch_indices[396] =
{
	 0, 1, 2,
	 3, 4, 5,
	 6, 7, 8,
	 9, 10, 11,
	 12, 13, 14,
	 15, 16, 17,
	 18, 19, 20,
	 21, 22, 10,
	 23, 24, 25,
	 26, 27, 28,
	 5, 4, 1,
	 29, 25, 30,
	 31, 32, 17,
	 33, 8, 34,
	 35, 36, 37,
	 38, 39, 40,
	 41, 42, 43,
	 44, 45, 46,
	 47, 48, 49,
	 50, 34, 51,
	 52, 17, 32,
	 53, 54, 55,
	 56, 57, 58,
	 59, 60, 61,
	 62, 43, 40,
	 63, 55, 64,
	 65, 49, 18,
	 66, 67, 68,
	 69, 70, 71,
	 52, 72, 20,
	 73, 74, 75,
	 76, 75, 74,
	 77, 78, 14,
	 79, 61, 13,
	 80, 81, 82,
	 83, 84, 42,
	 9, 17, 16,
	 85, 86, 87,
	 88, 89, 90,
	 91, 92, 93,
	 94, 95, 3,
	 96, 95, 94,
	 97, 98, 99,
	 100, 64, 71,
	 101, 102, 30,
	 103, 104, 105,
	 106, 107, 84,
	 108, 109, 110,
	 111, 112, 113,
	 88, 114, 115,
	 116, 110, 92,
	 117, 99, 90,
	 118, 24, 23,
	 119, 11, 10,
	 120, 7, 6,
	 35, 10, 22,
	 121, 122, 123,
	 124, 125, 126,
	 53, 127, 113,
	 47, 128, 68,
	 44, 129, 130,
	 60, 59, 131,
	 109, 108, 132,
	 133, 134, 135,
	 46, 45, 76,
	 46, 136, 129,
	 46, 76, 137,
	 0, 2, 138,
	 3, 5, 139,
	 6, 8, 33,
	 9, 11, 31,
	 12, 14, 78,
	 15, 17, 77,
	 18, 20, 140,
	 21, 10, 9,
	 23, 25, 141,
	 26, 28, 35,
	 5, 1, 0,
	 29, 30, 102,
	 31, 17, 9,
	 33, 34, 50,
	 35, 37, 119,
	 38, 40, 142,
	 41, 43, 62,
	 44, 46, 129,
	 47, 49, 65,
	 50, 51, 143,
	 52, 32, 72,
	 53, 55, 63,
	 56, 58, 131,
	 59, 61, 79,
	 62, 40, 39,
	 63, 64, 100,
	 65, 18, 140,
	 66, 68, 128,
	 69, 71, 101,
	 52, 20, 19,
	 73, 75, 144,
	 76, 74, 137,
	 77, 14, 15,
	 79, 13, 12,
	 80, 82, 132,
	 83, 42, 41,
	 9, 16, 21,
	 85, 87, 121,
	 88, 90, 114,
	 91, 93, 115,
	 94, 3, 139,
	 96, 94, 145,
	 97, 99, 117,
	 100, 71, 70,
	 101, 30, 69,
	 103, 105, 118,
	 106, 84, 83,
	 108, 110, 116,
	 111, 113, 127,
	 88, 115, 93,
	 116, 92, 91,
	 117, 90, 89,
	 118, 23, 103,
	 119, 10, 35,
	 120, 6, 124,
	 35, 22, 26,
	 121, 123, 85,
	 124, 126, 120,
	 53, 113, 54,
	 47, 68, 48,
	 44, 130, 146,
	 60, 131, 58,
	 109, 132, 82,
	 133, 135, 147,
	 46, 137, 148,
};
#define _Flag_RoundArch_indices_
#endif
// Part of an OBJ_MATERIAL, the struct is 16 byte aligned so it is GPU register friendly.
#ifndef __OBJ_ATTRIBUTES__
typedef struct _OBJ_ATTRIBUTES_
{
	OBJ_VEC3    Kd; // diffuse reflectivity
	float	    d; // dissolve (transparency) 
	OBJ_VEC3    Ks; // specular reflectivity
	float       Ns; // specular exponent
	OBJ_VEC3    Ka; // ambient reflectivity
	float       sharpness; // local reflection map sharpness
	OBJ_VEC3    Tf; // transmission filter
	float       Ni; // optical density (index of refraction)
	OBJ_VEC3    Ke; // emissive reflectivity
	unsigned    illum; // illumination model
}OBJ_ATTRIBUTES;
#define __OBJ_ATTRIBUTES__
#endif
// This structure also has been made GPU register friendly so it can be transfered directly if desired.
// Note: Total struct size will vary depenedening on CPU processor architecture (string pointers).
#ifndef __OBJ_MATERIAL__
typedef struct _OBJ_MATERIAL_
{
	// The following items are typically used in a pixel/fragment shader, they are packed for GPU registers.
	OBJ_ATTRIBUTES attrib; // Surface shading characteristics & illumination model
	// All items below this line are not needed on the GPU and are generally only used during load time.
	const char* name; // the name of this material
	// If the model's materials contain any specific texture data it will be located below.
	const char* map_Kd; // diffuse texture
	const char* map_Ks; // specular texture
	const char* map_Ka; // ambient texture
	const char* map_Ke; // emissive texture
	const char* map_Ns; // specular exponent texture
	const char* map_d; // transparency texture
	const char* disp; // roughness map (displacement)
	const char* decal; // decal texture (lerps texture & material colors)
	const char* bump; // normal/bumpmap texture
	void* padding[2]; // 16 byte alignment on 32bit or 64bit
}OBJ_MATERIAL;
#define __OBJ_MATERIAL__
#endif
#ifndef _Flag_RoundArch_materials_
// Material Data follows: pulled from a .mtl file of the same name if present.
const OBJ_MATERIAL Flag_RoundArch_materials[1] =
{
	{
		{{ 0.210681f, 0.067752f, 0.018038f },
		1.000000f,
		{ 0.500000f, 0.500000f, 0.500000f },
		96.078453f,
		{ 1.000000f, 1.000000f, 1.000000f },
		60.000000f,
		{ 1.000000f, 1.000000f, 1.000000f },
		1.000000f,
		{ 0.000000f, 0.000000f, 0.000000f },
		2},
		"Flag.001",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
	},
};
#define _Flag_RoundArch_materials_
#endif
/************************************************/
/*  This section contains the model's structure */
/************************************************/
#ifndef _Flag_RoundArch_batches_
// Use this conveinence array to batch render all geometry by like material.
// Each entry corresponds to the same entry in the materials array above.
// The two numbers provided are the IndexCount and the IndexOffset into the indices array.
// If you need more fine grained control(ex: for transformations) use the OBJ_MESH data below.
const unsigned int Flag_RoundArch_batches[1][2] =
{
	{ 396, 0 },
};
#define _Flag_RoundArch_batches_
#endif
#ifndef __OBJ_MESH__
typedef struct _OBJ_MESH_
{
	const char* name;
	unsigned    indexCount;
	unsigned    indexOffset;
	unsigned    materialIndex;
}OBJ_MESH;
#define __OBJ_MESH__
#endif
#ifndef _Flag_RoundArch_meshes_
// Mesh Data follows: Meshes are .obj groups sorted & split by material.
// Meshes are provided in sequential order, sorted by material first and name second.
const OBJ_MESH Flag_RoundArch_meshes[1] =
{
	{
		"default",
		396,
		0,
		0,
	},
};
#define _Flag_RoundArch_meshes_
#endif
